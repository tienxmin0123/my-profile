// Custom mixins.
// =============================================================================
// String Replace
// =============================================================================

@function str-replace($string, $search, $replace: "") {
	$index: str-index($string, $search);

	@if $index {
		@return str-slice($string, 1, $index - 1) + $replace + str-replace(str-slice($string, $index + str-length($search)), $search, $replace);
	}

	@return $string;
}

// =============================================================================
// Font Face
// =============================================================================

@mixin font-face($name, $path, $weight: null, $style: null, $exts: eot woff2 woff ttf svg) {
	$src: null;

	$extmods: (
		eot: "?",
		svg: "#" + str-replace($name, " ", "_")
	);

	$formats: (
		otf: "opentype",
		ttf: "truetype"
	);

	@each $ext in $exts {
		$extmod: if(map-has-key($extmods, $ext), $ext + map-get($extmods, $ext), $ext);
		$format: if(map-has-key($formats, $ext), map-get($formats, $ext), $ext);
		$src: append($src, url(quote($path + "." + $extmod)) format(quote($format)), comma);
	}

	@font-face {
		font-family: quote($name);
		font-style: $style;
		font-weight: $weight;
		src: $src;
	}
}

@mixin roboto {
  font-family: 'Poppins', sans-serif;
}

//Single image background with retina support
//USAGE:  @include background-image-retina('preloader', 'GIF', rem(20px), rem(20px));
@mixin background-image-retina($image-1x, $image-2x, $width, $height) {
  background-image: url($image-path + $image-1x);

  @media (min--moz-device-pixel-ratio: 1.3),
         (-o-min-device-pixel-ratio: 2.6/2),
         (-webkit-min-device-pixel-ratio: 1.3),
         (min-device-pixel-ratio: 1.3),
         (min-resolution: 1.3dppx) {
    background-image: url($image-path + $image-2x);
    background-size: $width $height;
  }
}

// Add demo label for responsive info.
@mixin show-breakpoints {
  &:after {
    background-color: $pigeon-post-light;
    border-radius: 20px;
    bottom: rem(20px);
    box-shadow: 0 1px 10px $gray;
    color: $black;
    content: 'Mobile';
    display: block;
    font-size: rem(16px);
    padding: rem(5px 10px);
    position: fixed;
    right: rem(20px);
    z-index: 1000;

    @media (min-width: $tablet) {
      content: 'Tablet' !important;
    }

    @media (min-width: $desktop) {
      content: 'Small desktop' !important;
    }
  }
}

// Clearfix as mixin.
@mixin clearfix {
  &:before,
  &:after {
    content: '';
    display: table;
  }

  &:after {
    clear: both;
  }
}

// Mixin focus
@mixin focus ($color: $black) {
  box-shadow: 0 0 rem(5px) rgba($color, 1);
  outline: 0 none;
}

// grid
@mixin grid($cols: 2, $margin-right: 10px, $margin-bottom: $margin-right, $center: center) {
  display: flex;
  flex-wrap: wrap;
  align-items: center;
  justify-content: $center;

  > div {
    margin-bottom: $margin-bottom;
    width: 100%;

    @media only screen and (min-width: 480px) {
      width: calc((100% - (#{$margin-right} + 1px)) / 2);
      margin: 0 $margin-right $margin-bottom 0;

      &:nth-of-type(2n) {
        margin-right: 0;
      }
    }

    @media only screen and (min-width: 768px) {
      width: calc((100% - (#{$margin-right} * (#{$cols} - 1) + 1px)) / #{$cols});
      margin: 0 $margin-right $margin-bottom 0;

      &:nth-of-type(2n) {
        margin-right: $margin-right;
      }

      &:nth-of-type(#{$cols}n) {
        margin-right: 0;
      }
    }
  }
}
